/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

rule SystemACL {
    description:  "System ACL to permit all access"
    participant: "org.hyperledger.composer.system.Participant"
    operation: ALL
    resource: "org.hyperledger.composer.system.**"
    action: ALLOW
}

rule NetworkAdminUser {
    description: "Grant business network administrators full access to user resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "**"
    action: ALLOW
}

rule NetworkAdminSystem {
    description: "Grant business network administrators full access to system resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "org.hyperledger.composer.system.**"
    action: ALLOW
}

rule CreateProcess {
  description: "All of members can publish a process"
  participant: "org.sysu.wf.Member"
  operation: CREATE
  resource: "org.sysu.wf.Process"
  action: ALLOW
}

rule ChangeProcessStatus {
  description: "Only members who satisfies given conditions can change process status"
  participant(p): "org.sysu.wf.Member"
  operation: UPDATE
  resource(r): "org.sysu.wf.Process"
  condition: (p.memberId == r.processRelatedData.To)
  action: ALLOW
}

rule GetProcessList {
  description: "Only members who participated in the process can get the information of the process"
  participant(p): "org.sysu.wf.Member"
  operation: READ
  resource(r): "org.sysu.wf.Process"
  condition: (r.memberMessage.From === p.memberId || r.memberMessage.To.indexOf(p.memberId) != -1)
  action: ALLOW
}

rule GetMemberList {
  description: "Description of the Conditional ACL rule"
  participant(p): "org.sysu.wf.Member"
  operation: ALL
  resource(r): "org.sysu.wf.Member"
  condition: (p.memberId == r.memberId)
  action: ALLOW
}

rule ChangeStatusTransaction {
  description: "All members can change status a transaction."
  participant(p): "org.sysu.wf.Member"
  operation: ALL
  resource(res): "org.sysu.wf.ChangeStatus"
  transaction(tx): "org.sysu.wf.ChangeStatus"
  condition: (true)
  action: ALLOW
}

rule PublishTransaction {
  description: "All members can create a transaction."
  participant(p): "org.sysu.wf.Member"
  operation: ALL
  resource(res): "org.sysu.wf.Create"
  transaction(tx): "org.sysu.wf.Create"
  condition: (true)
  action: ALLOW
}