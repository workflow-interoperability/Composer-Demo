/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

rule SystemACL {
    description:  "System ACL to permit all access"
    participant: "org.hyperledger.composer.system.Participant"
    operation: ALL
    resource: "org.hyperledger.composer.system.**"
    action: ALLOW
}

rule NetworkAdminUser {
    description: "Grant business network administrators full access to user resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "**"
    action: ALLOW
}

rule NetworkAdminSystem {
    description: "Grant business network administrators full access to system resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "org.hyperledger.composer.system.**"
    action: ALLOW
}

rule PublishProcessInstance {
  description: "All of members can publish a process instance"
  participant: "org.sysu.wf.Member"
  operation: CREATE
  resource: "org.sysu.wf.ProcessInstance"
  action: ALLOW
}

rule UpdateProcessInstance {
  description: "Only owner can update process instance"
  participant(p): "org.sysu.wf.Member"
  operation: UPDATE
  resource(r): "org.sysu.wf.ProcessInstance"
  condition: (p.memberID == r.owner)
  action: ALLOW
}

rule GetProcessInstance {
  description: "Only members except owner who satisfies id or role condition given in process instance can get the information of the process"
  participant(p): "org.sysu.wf.Member"
  operation: READ
  resource(r): "org.sysu.wf.ProcessInstance"
  condition: (p.memberID == r.owner || p.memberID == r.subscriberInformation.id || p.roleList.filter(function(v){ return r.subscriberInformation.roles.indexOf(v) > -1 }).length > 0)
  action: ALLOW
}

rule GetMemberInformation {
  description: "A member can only get details of its own"
  participant(p): "org.sysu.wf.Member"
  operation: ALL
  resource(r): "org.sysu.wf.Member"
  condition: (p.memberID == r.memberID)
  action: ALLOW
}
